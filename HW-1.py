import numpy as np

# #1
temps = np.array([15.2, 16.8, 14.5, 17.0, 16.1])

print(f"cумму {np.sum(temps)}, среднее  {np.mean(temps)}, минимум  {np.min(temps)} и максимум массива  {np.max(temps)}")

#2

h1 = np.array([45, 50, 47])
h2 = np.array([48, 46, 52])

print(h1+h2)
print(h1*h2)
print(np.dot(h1, h2))

#3
X = np.array([
[20.1, 20.3, 19.8],
[21.0, 20.7, 20.2],
[19.5, 19.8, 19.3],
[20.8, 21.1, 20.6]
])

print(f"Среднее по столбцам {np.mean(X, axis=0)}")
print(f"Сумму по строкам {np.sum(X, axis=1)}")
print(f"Дисперсию по столбцам с ddof=1 {np.var(X, axis=0, ddof=1)}")
print (f"индекс столбца (сенсора) с минимальной дисперсией {np.var(X, axis=0, ddof=1).argmin()}")

#4
X = np.array([
[20.1, 20.3, 19.8],
[21.0, 20.7, 20.2],
[19.5, 19.8, 19.3],
[20.8, 21.1, 20.6]
])
print(f"По столбцам col_min и col_max (минимум и максимум в каждой колонке): минимумы {np.min(X, axis=0)}, максимумы {np.max(X, axis=0)}")
print(f"Вычислите col_range = col_max - col_min (размах ззначений в каждой колонке: {np.max(X, axis=0)-np.min(X, axis=0)}")
print(f"Вычтите из каждого столбца его col_min и поделите значения в каждом столбце на col_range , в результате значения в каждом столбце{(X-np.min(X, axis=0))/(np.max(X, axis=0)-np.min(X, axis=0))}")

#5
ph = np.array([
[7.1, 7.4, 7.0],
[6.9, 7.2, 7.1],
[7.3, 7.5, 7.2],
[7.0, 7.1, 6.8],
[6.8, 6.9, 6.7],
[7.4, 7.6, 7.3]
])


print(f"Среднее pH каждой пробы (по строкам) {np.mean(ph, axis=1)}")
print(f"Сумму значений pH для каждого образца (по столбцам) {np.sum(ph, axis=0)}")
print(f"Общую сумму значений pH для каждой пробы {np.sum(ph, axis=1)}")
print(f"Дисперсию по образцам с ddof=1 {np.var(ph, ddof=1, axis=0)}")


#6
consumption = np.array([
[ 8, 6, 5], # Mon
[10, 7, 6], # Tue
[ 9, 8, 7], # Wed
[11, 10, 9], # Thu
[14, 12, 11], # Fri
[16, 15, 13], # Sat
[12, 11, 10] # Sun
])
days = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']
houses = ['H1','H2','H3']

print(f"Общее энергопотребление за неделю для каждого дома (по столбцам){np.sum(consumption, axis=0)}")
print(f"Общее потребление по дням (по строкам){np.sum(consumption, axis=1)}")
print(f"Среднее энергопотребление в каждом доме (по столбцам){np.mean(consumption, axis=0)}")
print(f"Назовите день с наибольшим суммарным потреблением (по строкам){days[np.sum(consumption, axis=1).argmax()]}")
print(f"Дисперсию потребления в каждом доме ddof=1 {np.var(consumption, ddof=1, axis=0)}")
#Опираясь на рассчитанные средние и дисперсии, какой дом вы бы назвали наиболее стабильным по потреблению и почему? (ответ можно получить, сравнив дисперсии домов)
#первый дом стабильнее - минимальная дисперсия

#7
sensors = np.array([
[15, 101, 20, 0.5],
[16, 100, 21, 0.6],
[15, 102, 19, 0.4],
[17, 103, 22, 0.7],
[18, 104, 23, 0.6],
[19, 105, 24, 0.8],
[17, 103, 22, 0.5]
])
types = ['TempSensor','PressureSensor','FlowSensor','VibrationSensor']

print(f"Общую сумму показаний каждой группы датчиков (по столбцам) {np.sum(sensors, axis=0)}")
print(f"Среднее показание по каждой группе (по столбцам) {np.mean(sensors, axis=0)}")
print(f"Дисперсию по каждой группе ddof=1 {sensors.var(ddof=1, axis=0)}")
print(f"Определите группу датчиков с наибольшей суммарной величиной {types[np.sum(sensors, axis=0).argmax()]}")

#Если задача — выбрать одну группу датчиков для приоритетного мониторинга (цель — максимизировать среднее информативное значение при
# умеренной стабильности), какую группу вы бы рекомендовали и почему? (ответ обосновывается сравнениями средних и дисперсий)
# датчики PressureSensor - максимальное среднее при почти одинаковых дисперсиях с остальными значениями.
